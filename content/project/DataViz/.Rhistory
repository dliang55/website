covid.daily.long %>%
ggplot(aes(date = report_date, fill = Total)) +
labs(x = "Date of report", title = "Figure 1.",
subtitle = "Daily COVID-19 rates in Ontario.",
caption = paste("Rates reported from ", covid.daily.long$report_date[[1]], " to ", tail(covid.daily.long$report_date, n=1), ".\n",
"Source: Open Canada.", sep="")) +
facet_grid(rows = vars(Type))+
stat_calendar_heatmap()+
scale_fill_continuous(low = 'green', high = 'red') +
theme(axis.text = element_blank(),
strip.background = element_blank(), panel.background = element_blank(), panel.border = element_blank() )
covid.daily.long %>%
ggplot(aes(date = report_date, fill = Total)) +
labs(x = "Date of report", title = "Figure 1.",
subtitle = "Daily COVID-19 rates in Ontario.",
caption = paste("Rates reported from ", covid.daily.long$report_date[[1]], " to ", tail(covid.daily.long$report_date, n=1), ".\n",
"Source: Open Canada.", sep="")) +
facet_grid(rows = vars(Type))+
stat_calendar_heatmap()+
scale_fill_continuous(low = 'green', high = 'red') +
theme(axis.text = element_blank(), axis.ticks = element_blank(),
strip.background = element_blank(), panel.background = element_blank(), panel.border = element_blank())
covid.daily.long %>%
ggplot(aes(date = report_date, fill = Total)) +
labs(x = "Date of report", title = "Figure 1.",
subtitle = "Daily COVID-19 rates in Ontario.",
caption = paste("Rates reported from ", covid.daily.long$report_date[[1]], " to ", tail(covid.daily.long$report_date, n=1), ".\n",
"Source: Open Canada.", sep="")) +
facet_grid(rows = vars(Type))+
stat_calendar_heatmap()+
scale_fill_continuous(low = 'green', high = 'red') +
theme(
)
covid.daily.long %>%
ggplot(aes(date = report_date, fill = Total)) +
labs(date = "Date of report", title = "Figure 1.",
subtitle = "Daily COVID-19 rates in Ontario.",
caption = paste("Rates reported from ", covid.daily.long$report_date[[1]], " to ", tail(covid.daily.long$report_date, n=1), ".\n",
"Source: Open Canada.", sep="")) +
facet_grid(rows = vars(Type))+
stat_calendar_heatmap()+
scale_fill_continuous(low = 'green', high = 'red') +
theme(axis.text = element_blank(), axis.ticks = element_blank(),
strip.background = element_blank(), panel.background = element_blank(), panel.border = element_blank())
covid.daily.long %>%
ggplot(aes(date = report_date, fill = Total)) +
labs(x = "Date of report", title = "Figure 1.",
subtitle = "Daily COVID-19 rates in Ontario.",
caption = paste("Rates reported from ", covid.daily.long$report_date[[1]], " to ", tail(covid.daily.long$report_date, n=1), ".\n",
"Source: Open Canada.", sep="")) +
facet_grid(rows = vars(Type))+
stat_calendar_heatmap()
covid.daily.long %>%
ggplot(aes(date = report_date, fill = Total)) +
labs(title = "Figure 3.",
subtitle = "Daily COVID-19 rates in Ontario.",
caption = paste("Rates reported from ", covid.daily.long$report_date[[1]], " to ", tail(covid.daily.long$report_date, n=1), ".\n",
"Source: Open Canada.", sep="")) +
facet_grid(rows = vars(Type))+
stat_calendar_heatmap()+
scale_fill_continuous(low = 'green', high = 'red')
covid.daily.long %>%
ggplot(aes(x = report_date, fill = Total)) +
labs(title = "Figure 3.",
subtitle = "Daily COVID-19 rates in Ontario.",
caption = paste("Rates reported from ", covid.daily.long$report_date[[1]], " to ", tail(covid.daily.long$report_date, n=1), ".\n",
"Source: Open Canada.", sep="")) +
facet_grid(rows = vars(Type))+
stat_calendar_heatmap()+
scale_fill_continuous(low = 'green', high = 'red')
covid.daily.long %>%
ggplot(aes(date = report_date, fill = Total)) +
labs(title = "Figure 3.",
subtitle = "Daily COVID-19 rates in Ontario.",
caption = paste("Rates reported from ", covid.daily.long$report_date[[1]], " to ", tail(covid.daily.long$report_date, n=1), ".\n",
"Source: Open Canada.", sep="")) +
facet_grid(rows = vars(Type))+
stat_calendar_heatmap()+
scale_fill_continuous(low = 'green', high = 'red')
covid.daily.long %>%
ggplot(aes(date = report_date, fill = Total)) +
labs(title = "Figure 3.",
subtitle = "Daily COVID-19 rates in Ontario.",
caption = paste("Rates reported from ", covid.daily.long$report_date[[1]], " to ", tail(covid.daily.long$report_date, n=1), ".\n",
"Source: Open Canada.", sep="")) +
facet_grid(rows = vars(Type))+
stat_calendar_heatmap()+
scale_fill_continuous(low = 'green', high = 'red') +
theme(axis.text = element_blank(), axis.ticks = element_blank(),
strip.background = element_blank(), panel.background = element_blank(), panel.border = element_blank())
covid.daily.long %>%
ggplot(aes(date = report_date, fill = Total)) +
labs(title = "Figure 3.",
subtitle = "Daily COVID-19 rates in Ontario.",
caption = paste("Rates reported from ", covid.daily.long$report_date[[1]], " to ", tail(covid.daily.long$report_date, n=1), ".\n",
"Source: Open Canada.", sep="")) +
facet_grid(rows = vars(Type))+
stat_calendar_heatmap()+
scale_fill_continuous(low = 'green', high = 'red') +
theme(axis.text = element_blank(), #axis.ticks = element_blank(),
strip.background = element_blank(), panel.background = element_blank(), panel.border = element_blank())
covid.daily.long %>%
ggplot(aes(date = report_date, fill = Total)) +
labs(title = "Figure 3.",
subtitle = "Daily COVID-19 rates in Ontario.",
caption = paste("Rates reported from ", covid.daily.long$report_date[[1]], " to ", tail(covid.daily.long$report_date, n=1), ".\n",
"Source: Open Canada.", sep="")) +
facet_grid(rows = vars(Type))+
stat_calendar_heatmap()+
scale_fill_continuous(low = 'green', high = 'red') +
theme( axis.ticks = element_blank(),#axis.text = element_blank(),
strip.background = element_blank(), panel.background = element_blank(), panel.border = element_blank())
covid.daily.long %>%
ggplot(aes(date = report_date, fill = Total)) +
labs(title = "Figure 3.",
subtitle = "Daily COVID-19 rates in Ontario.",
caption = paste("Rates reported from ", covid.daily.long$report_date[[1]], " to ", tail(covid.daily.long$report_date, n=1), ".\n",
"Source: Open Canada.", sep="")) +
facet_grid(rows = vars(Type))+
stat_calendar_heatmap()+
scale_fill_continuous(low = 'green', high = 'red') +
theme(axis.text = element_blank(), axis.ticks = element_blank()
)
covid.daily.long %>%
ggplot(aes(date = report_date, fill = Total)) +
labs(title = "Figure 3.",
subtitle = "Daily COVID-19 rates in Ontario.",
caption = paste("Rates reported from ", covid.daily.long$report_date[[1]], " to ", tail(covid.daily.long$report_date, n=1), ".\n",
"Source: Open Canada.", sep="")) +
facet_grid(rows = vars(Type))+
stat_calendar_heatmap(show.legend = TRUE)+
scale_fill_continuous(low = 'green', high = 'red') +
theme(axis.text = element_blank(), axis.ticks = element_blank(),
strip.background = element_blank(), panel.background = element_blank(), panel.border = element_blank())
covid.daily.long %>%
ggplot(aes(date = report_date, fill = Total)) +
labs(x = "Date of report", y = "Day of the Week (Sunday to Saturday)", title = "Figure 3.",
subtitle = "Daily COVID-19 rates in Ontario.",
caption = paste("Rates reported from ", covid.daily.long$report_date[[1]], " to ", tail(covid.daily.long$report_date, n=1), ".\n",
"Source: Open Canada.", sep="")) +
facet_grid(rows = vars(Type))+
stat_calendar_heatmap(show.legend = TRUE)+
scale_fill_continuous(low = 'green', high = 'red') +
theme(axis.text = element_blank(), axis.ticks = element_blank(),
strip.background = element_blank(), panel.background = element_blank(), panel.border = element_blank())
covid.daily.long %>%
ggplot(aes(date = report_date, fill = Total)) +
labs(x = "Date of report", y = "Day of the Week\n(Sunday to Saturday)", title = "Figure 3.",
subtitle = "Daily COVID-19 rates in Ontario.",
caption = paste("Rates reported from ", covid.daily.long$report_date[[1]], " to ", tail(covid.daily.long$report_date, n=1), ".\n",
"Source: Open Canada.", sep="")) +
facet_grid(rows = vars(Type))+
stat_calendar_heatmap(show.legend = TRUE)+
scale_fill_continuous(low = 'green', high = 'red') +
theme(axis.text = element_blank(), axis.ticks = element_blank(),
strip.background = element_blank(), panel.background = element_blank(), panel.border = element_blank())
covid.daily.long %>%
ggplot(aes(date = report_date, fill = Total)) +
labs(x = "Date of report", y = "Day of the Week\n(Sunday to Saturday)", title = "Figure 3.",
subtitle = "Daily COVID-19 rates in Ontario.",
caption = paste("Rates reported from ", covid.daily.long$report_date[[1]], " to ", tail(covid.daily.long$report_date, n=1), ".\n",
"Source: Open Canada.", sep="")) +
facet_grid(rows = vars(Type))+
stat_calendar_heatmap()+
scale_fill_continuous(low = 'green', high = 'red') +
theme(axis.text = element_blank(), axis.ticks = element_blank(),
strip.background = element_blank(), panel.background = element_blank(), panel.border = element_blank())
covid.daily.long %>%
ggplot(aes(date = report_date, fill = Total)) +
labs(x = "Date of report", y = "Day of the Week\n(Monday to Friday)", title = "Figure 3.",
subtitle = "Daily COVID-19 rates in Ontario.",
caption = paste("Rates reported from ", covid.daily.long$report_date[[1]], " to ", tail(covid.daily.long$report_date, n=1), ".\n",
"Source: Open Canada.", sep="")) +
facet_grid(rows = vars(Type))+
stat_calendar_heatmap()+
scale_fill_continuous(low = 'green', high = 'red') +
theme(axis.text = element_blank(), axis.ticks = element_blank()
)
covid.daily.long %>%
ggplot(aes(date = report_date, fill = Total)) +
labs(x = "Date of report", y = "Day of the Week\n(Monday to Friday)", title = "Figure 3.",
subtitle = "Daily COVID-19 rates in Ontario.",
caption = paste("Rates reported from ", covid.daily.long$report_date[[1]], " to ", tail(covid.daily.long$report_date, n=1), ".\n",
"Source: Open Canada.", sep="")) +
facet_grid(rows = vars(Type))+
stat_calendar_heatmap()+
scale_fill_continuous(low = 'green', high = 'red') +
theme(axis.text = element_blank(), axis.ticks = element_blank(),
strip.background = element_blank())
covid.daily.long %>%
ggplot(aes(date = report_date, fill = Total)) +
labs(x = "Date of report", y = "Day of the Week\n(Monday to Friday)", title = "Figure 3.",
subtitle = "Daily COVID-19 rates in Ontario.",
caption = paste("Rates reported from ", covid.daily.long$report_date[[1]], " to ", tail(covid.daily.long$report_date, n=1), ".\n",
"Source: Open Canada.", sep="")) +
facet_grid(rows = vars(Type))+
stat_calendar_heatmap()+
scale_fill_continuous(low = 'green', high = 'red') +
theme(axis.text = element_blank(), axis.ticks = element_blank(),
strip.background = element_blank(), panel.background = element_blank()
)
covid.daily.long %>%
ggplot(aes(date = report_date, fill = Total)) +
labs(x = "Date of report", y = "Day of the Week\n(Monday to Friday)", title = "Figure 3.",
subtitle = "Daily COVID-19 rates in Ontario.",
caption = paste("Rates reported from ", covid.daily.long$report_date[[1]], " to ", tail(covid.daily.long$report_date, n=1), ".\n",
"Source: Open Canada.", sep="")) +
facet_grid(rows = vars(Type))+
stat_calendar_heatmap()+
scale_fill_continuous(low = 'green', high = 'red') +
theme(axis.text = element_blank(), axis.ticks = element_blank(),
strip.background = element_blank(), panel.border = element_blank())
covid.daily.long %>%
ggplot(aes(date = report_date, fill = Total)) +
labs(x = "Date of report", y = "Day of the Week\n(Monday to Friday)", title = "Figure 3.",
subtitle = "Daily COVID-19 rates in Ontario.",
caption = paste("Rates reported from ", covid.daily.long$report_date[[1]], " to ", tail(covid.daily.long$report_date, n=1), ".\n",
"Source: Open Canada.", sep="")) +
facet_grid(rows = vars(Type))+
stat_calendar_heatmap()+
scale_fill_continuous(low = 'green', high = 'red') +
theme(axis.text = element_blank(), axis.ticks = element_blank(),
strip.background = element_blank(), panel.border = element_blank())
covid.daily.long %>%
ggplot(aes(date = report_date, fill = Total)) +
labs(x = "Date of report", y = "Day of the Week\n(Monday to Friday)", title = "Figure 3.",
subtitle = "Daily COVID-19 rates in Ontario.",
caption = paste("Rates reported from ", covid.daily.long$report_date[[1]], " to ", tail(covid.daily.long$report_date, n=1), ".\n",
"Source: Open Canada.", sep="")) +
facet_grid(rows = vars(Type))+
stat_calendar_heatmap()+
scale_fill_continuous(low = 'green', high = 'red') +
theme(axis.text = element_blank(), axis.ticks = element_blank(),
strip.background = element_blank())
View(covid.daily.long)
covid.daily.long %>%
ggplot(aes(date = report_date, fill = Total)) +
scale_x_date(date_labels = "%Y-%m-%d")
labs(x = "Date of report", y = "Day of the Week\n(Monday to Friday)", title = "Figure 3.",
subtitle = "Daily COVID-19 rates in Ontario.",
caption = paste("Rates reported from ", covid.daily.long$report_date[[1]], " to ", tail(covid.daily.long$report_date, n=1), ".\n",
"Source: Open Canada.", sep="")) +
facet_grid(rows = vars(Type))+
stat_calendar_heatmap()+
scale_fill_continuous(low = 'green', high = 'red') +
theme(axis.text = element_blank(), axis.ticks = element_blank(),
strip.background = element_blank())
covid.daily.long %>%
ggplot(aes(date = report_date, fill = Total)) +
scale_x_date(date_labels = "%Y-%m-%d")+
labs(x = "Date of report", y = "Day of the Week\n(Monday to Friday)", title = "Figure 3.",
subtitle = "Daily COVID-19 rates in Ontario.",
caption = paste("Rates reported from ", covid.daily.long$report_date[[1]], " to ", tail(covid.daily.long$report_date, n=1), ".\n",
"Source: Open Canada.", sep="")) +
facet_grid(rows = vars(Type))+
stat_calendar_heatmap()+
scale_fill_continuous(low = 'green', high = 'red') +
theme(axis.text = element_blank(), axis.ticks = element_blank(),
strip.background = element_blank())
typeof(covid.daily.long$report_date)
# Write a # Planning section in your .Rmd to describe the ## Story you hope to tell about the data you are exploring, and the ## Plots that you think will help to convey that story.
file_list = list.files(pattern="*.csv")
last_modified_dt = max(file.info(file_list)$mtime)
# import spreadsheets of interest
dose.df <- read_csv("./vaccine_doses.csv", show_col_types = FALSE)
case.df <- read_csv("./covidtesting.csv", show_col_types = FALSE)
# reduce dataframe through column select
dose.reduce <- dose.df %>%
select(as.Date(report_date), previous_day_fully_vaccinated, total_individuals_fully_vaccinated)
knitr::opts_chunk$set(echo = TRUE)
#install.packages("tidyverse")
#install.packages("here")
#install.packages(readxl)
#install.packages("psych")
#install.packages("naniar")
#install.packages("gt")
#devtools::install_github("rstudio/gt", ref = "w-tbl-exp")
#devtools::install_github("jthomasmock/gtExtras")
#devtools::install_github('Ather-Energy/ggTimeSeries')
#install.packages("gganimate")
#install.packages("gifski")
library(tidyverse)
#library(here)
#library(readxl)
#library(psych)
#library(naniar)
#library(gt)
#library(gtExtras)
#library(knitr)
library(ggTimeSeries)
library(gganimate)
library(gifski)
# Write a # Planning section in your .Rmd to describe the ## Story you hope to tell about the data you are exploring, and the ## Plots that you think will help to convey that story.
file_list = list.files(pattern="*.csv")
last_modified_dt = max(file.info(file_list)$mtime)
# import spreadsheets of interest
dose.df <- read_csv("./vaccine_doses.csv", show_col_types = FALSE)
case.df <- read_csv("./covidtesting.csv", show_col_types = FALSE)
# reduce dataframe through column select
dose.reduce <- dose.df %>%
select(report_date, previous_day_fully_vaccinated, total_individuals_fully_vaccinated)
case.reduce <- case.df %>%
select(`Reported Date`,`Confirmed Positive`, `Total Cases`)
covid.df <- left_join(dose.reduce, case.reduce, by = c("report_date" = "Reported Date"))
covid.daily <- covid.df %>%
select(report_date, previous_day_fully_vaccinated, `Confirmed Positive`)
covid.total <- covid.df %>%
select(report_date, total_individuals_fully_vaccinated, `Total Cases`)
# pivot dataframes for ggplot
covid.daily.long <- covid.daily %>%
pivot_longer(!report_date, names_to = "Type", values_to = "Total") %>%
mutate(Type = case_when(Type == "Confirmed Positive" ~ "Case", TRUE ~ "Vaccine"))
covid.total.long <- covid.total %>%
pivot_longer(!report_date, names_to = "Type", values_to = "Total") %>%
mutate(Type = case_when(Type == "Total Cases" ~ "Case", TRUE ~ "Vaccine"))
# In a # Publication section, create your ggplots styled in a way befitting of being published in a peer-reviewed journal article. Provide a brief ## Summary of what you think each plot tells us, and a ## Justification of the styling/formatting decisions that you made
covid.daily.long %>%
ggplot(aes(x = report_date, y = Total, fill = Type)) +
# geom_bar(stat = "identity", alpha = 0.4) +
geom_density(stat = "identity", alpha = 0.4) +
scale_y_continuous(name = "Count", labels = scales::comma) +
theme(axis.text.y = element_text(angle = 90)) +
labs(x = "Date of report", title = "Figure 1.",
subtitle = "Daily COVID-19 rates in Ontario.",
caption = paste("Rates reported from ", covid.daily.long$report_date[[1]], " to ", tail(covid.daily.long$report_date, n=1), ".\n",
"Source: Open Canada.", sep=""))
covid.total.long %>%
ggplot(aes(x = report_date, y = Total, fill = Type)) +
geom_density(stat = "identity", alpha = 0.4) +
scale_y_continuous(name = "Count", labels = scales::comma) +
theme(axis.text.y = element_text(angle = 90)) +
labs(x = "Date of report", title = "Figure 2.",
subtitle = "Cumulative COVID-19 rates in Ontario.",
caption = paste("Rates reported from ", covid.total.long$report_date[[1]], " to ", tail(covid.total.long$report_date, n=1), ".\n",
"Source: Open Canada.", sep=""))
covid.daily.long %>%
ggplot(aes(date = as.Date(report_date), fill = Total)) +
labs(x = "Month of report (January to December)", y = "Day of the week\n(Monday to Friday)", title = "Figure 3.",
subtitle = "Daily COVID-19 rates in Ontario.",
caption = paste("Rates reported from ", covid.daily.long$report_date[[1]], " to ", tail(covid.daily.long$report_date, n=1), ".\n",
"Source: Open Canada.", sep="")) +
facet_grid(rows = vars(Type))+
stat_calendar_heatmap()+
scale_fill_continuous(low = 'green', high = 'red') +
theme(axis.text = element_blank(), axis.ticks = element_blank(),
strip.background = element_blank())
# In a # Dynamic section, create your ggplots styled in a way befitting of a more "fun" and "dynamic" outlet, such as a blog, tweet, etc., (this is where you should strut your stuff/push your boundaries). Again provide a brief ## Summary of what you think each plot tells us, and a ## Justification of the styling/formatting decisions that you made
covid.daily.long %>%
ggplot(aes(date = as.Date(report_date), fill = Total)) +
labs(x = "Month of report (January to December)", y = "Day of the week\n(Monday to Friday)", title = "Figure 3.",
subtitle = "Daily COVID-19 rates in Ontario.",
caption = paste("Rates reported from ", covid.daily.long$report_date[[1]], " to ", tail(covid.daily.long$report_date, n=1), ".\n",
"Source: Open Canada.", sep="")) +
facet_grid(rows = vars(Type))+
stat_calendar_heatmap()+
scale_fill_continuous(low = 'green', high = 'red') +
theme(axis.text = element_blank(), axis.ticks = element_blank(),
strip.background = element_blank())
covid.total.long %>%
ggplot(aes(x = report_date, y = Total, color = Type)) +
scale_y_continuous(name = "Count", labels = scales::comma) +
theme(axis.text.y = element_text(angle = 90)) +
labs(x = "Date of report", title = "Figure 4.",
subtitle = "Cumulative COVID-19 rates in Ontario.",
caption = paste("Rates reported from ", covid.total.long$report_date[[1]], " to ", tail(covid.total.long$report_date, n=1), ".\n",
"Source: Open Canada.", sep="")) +
geom_path() +
geom_point() +
transition_reveal(along = report_date) +
view_follow()
knitr::opts_chunk$set(echo = TRUE)
#install.packages("tidyverse")
#install.packages("here")
#install.packages(readxl)
#install.packages("psych")
#install.packages("naniar")
#install.packages("gt")
#devtools::install_github("rstudio/gt", ref = "w-tbl-exp")
#devtools::install_github("jthomasmock/gtExtras")
#devtools::install_github('Ather-Energy/ggTimeSeries')
#install.packages("gganimate")
#install.packages("gifski")
library(tidyverse)
#library(here)
#library(readxl)
#library(psych)
#library(naniar)
#library(gt)
#library(gtExtras)
#library(knitr)
library(ggTimeSeries)
library(gganimate)
library(gifski)
# Data Visualization Assignment
# For this assignment you will need to find/secure access to a dataset that you think can be used to tell an interesting story through visualization. Possible sources of data sets include: 1) a data set you've already worked with before (e.g., your undergraduate thesis project); 2) an openly available psychology dataset; 3) one of the previous #TidyTuesday datasets (note, you may not "double count" this as a bonus assignment submission); 4) one of the open data sets used by FiveThirtyEight; 5) some other interesting an open data set of your choice (e.g., from a research article with an open data badge). You will need to make 2-4 visualizations (as Wilke notes, it's difficult to tell a story with only one!), and two different "versions" of each visualization. Your submission should be submitted as a fully reproducible workflow that must mindlessly knit to word.
# Note: Part of the correctness points portion of this assignment will draw from the coherence and convincingness of your story, plots, explanations, and justifications. Further, in addition to the normal reproducibility + correctness grading scheme, we will be grading this assignment using a "complexity multiplier" that's designed to incentivize folks who want to go the extra mile (tastefully) incorporating more advanced features. This multiplier will be applied following the tallying of reproducibility + correctness points (but the assignment will still cap out at its allotted 10% of final grade amount).:
#Advanced: 1.10x
#Expected: 1.0x
#Easier: 0.90x
# Write a # Planning section in your .Rmd to describe the ## Story you hope to tell about the data you are exploring, and the ## Plots that you think will help to convey that story.
file_list = list.files(pattern="*.csv")
last_modified_dt = max(file.info(file_list)$mtime)
# import spreadsheets of interest
dose.df <- read_csv("./vaccine_doses.csv", show_col_types = FALSE)
case.df <- read_csv("./covidtesting.csv", show_col_types = FALSE)
# reduce dataframe through column select
dose.reduce <- dose.df %>%
select(report_date, previous_day_fully_vaccinated, total_individuals_fully_vaccinated)
case.reduce <- case.df %>%
select(`Reported Date`,`Confirmed Positive`, `Total Cases`)
covid.df <- left_join(dose.reduce, case.reduce, by = c("report_date" = "Reported Date"))
covid.daily <- covid.df %>%
select(report_date, previous_day_fully_vaccinated, `Confirmed Positive`)
covid.total <- covid.df %>%
select(report_date, total_individuals_fully_vaccinated, `Total Cases`)
# pivot dataframes for ggplot
covid.daily.long <- covid.daily %>%
pivot_longer(!report_date, names_to = "Type", values_to = "Total") %>%
mutate(Type = case_when(Type == "Confirmed Positive" ~ "Case", TRUE ~ "Vaccine"))
covid.total.long <- covid.total %>%
pivot_longer(!report_date, names_to = "Type", values_to = "Total") %>%
mutate(Type = case_when(Type == "Total Cases" ~ "Case", TRUE ~ "Vaccine"))
# In a # Publication section, create your ggplots styled in a way befitting of being published in a peer-reviewed journal article. Provide a brief ## Summary of what you think each plot tells us, and a ## Justification of the styling/formatting decisions that you made
covid.daily.long %>%
ggplot(aes(x = report_date, y = Total, fill = Type)) +
# geom_bar(stat = "identity", alpha = 0.4) +
geom_density(stat = "identity", alpha = 0.4) +
scale_y_continuous(name = "Count", labels = scales::comma) +
theme(axis.text.y = element_text(angle = 90)) +
labs(x = "Date of report", title = "Figure 1.",
subtitle = "Daily COVID-19 rates in Ontario.",
caption = paste("Rates reported from ", covid.daily.long$report_date[[1]], " to ", tail(covid.daily.long$report_date, n=1), ".\n",
"Source: Open Canada.", sep=""))
covid.total.long %>%
ggplot(aes(x = report_date, y = Total, fill = Type)) +
geom_density(stat = "identity", alpha = 0.4) +
scale_y_continuous(name = "Count", labels = scales::comma) +
theme(axis.text.y = element_text(angle = 90)) +
labs(x = "Date of report", title = "Figure 2.",
subtitle = "Cumulative COVID-19 rates in Ontario.",
caption = paste("Rates reported from ", covid.total.long$report_date[[1]], " to ", tail(covid.total.long$report_date, n=1), ".\n",
"Source: Open Canada.", sep=""))
# In a # Dynamic section, create your ggplots styled in a way befitting of a more "fun" and "dynamic" outlet, such as a blog, tweet, etc., (this is where you should strut your stuff/push your boundaries). Again provide a brief ## Summary of what you think each plot tells us, and a ## Justification of the styling/formatting decisions that you made
covid.daily.long %>%
ggplot(aes(date = as.Date(report_date), fill = Total)) +
labs(x = "Month of report (January to December)", y = "Day of the week",
title = "Figure 3.", subtitle = "Daily COVID-19 rates in Ontario.",
caption = paste("Rates reported from ", covid.daily.long$report_date[[1]], " to ", tail(covid.daily.long$report_date, n=1), ".\n",
"Source: Open Canada.", sep="")) +
facet_grid(rows = vars(Type))+
stat_calendar_heatmap()+
scale_fill_continuous(low = 'green', high = 'red') +
theme(axis.text = element_blank(), axis.ticks = element_blank(),
strip.background = element_blank(), panel.background = element_blank(), panel.border = element_blank() )
covid.total.long %>%
ggplot(aes(x = report_date, y = Total, color = Type)) +
scale_y_continuous(name = "Count", labels = scales::comma) +
theme(axis.text.y = element_text(angle = 90)) +
labs(x = "Date of report", title = "Figure 4.",
subtitle = "Cumulative COVID-19 rates in Ontario.",
caption = paste("Rates reported from ", covid.total.long$report_date[[1]], " to ", tail(covid.total.long$report_date, n=1), ".\n",
"Source: Open Canada.", sep="")) +
geom_path() +
geom_point() +
transition_reveal(along = report_date) +
view_follow()
knitr::opts_chunk$set(echo = TRUE)
#install.packages("tidyverse")
#install.packages("here")
#install.packages(readxl)
#install.packages("psych")
#install.packages("naniar")
#install.packages("gt")
#devtools::install_github("rstudio/gt", ref = "w-tbl-exp")
#devtools::install_github("jthomasmock/gtExtras")
#devtools::install_github('Ather-Energy/ggTimeSeries')
#install.packages("gganimate")
#install.packages("gifski")
library(tidyverse)
#library(here)
#library(readxl)
#library(psych)
#library(naniar)
#library(gt)
#library(gtExtras)
#library(knitr)
library(ggTimeSeries)
library(gganimate)
library(gifski)
# Write a # Planning section in your .Rmd to describe the ## Story you hope to tell about the data you are exploring, and the ## Plots that you think will help to convey that story.
file_list = list.files(pattern="*.csv")
last_modified_dt = max(file.info(file_list)$mtime)
# import spreadsheets of interest
dose.df <- read_csv("./vaccine_doses.csv", show_col_types = FALSE)
case.df <- read_csv("./covidtesting.csv", show_col_types = FALSE)
# reduce dataframe through column select
dose.reduce <- dose.df %>%
select(report_date, previous_day_fully_vaccinated, total_individuals_fully_vaccinated)
case.reduce <- case.df %>%
select(`Reported Date`,`Confirmed Positive`, `Total Cases`)
covid.df <- left_join(dose.reduce, case.reduce, by = c("report_date" = "Reported Date"))
covid.daily <- covid.df %>%
select(report_date, previous_day_fully_vaccinated, `Confirmed Positive`)
covid.total <- covid.df %>%
select(report_date, total_individuals_fully_vaccinated, `Total Cases`)
# pivot dataframes for ggplot
covid.daily.long <- covid.daily %>%
pivot_longer(!report_date, names_to = "Type", values_to = "Total") %>%
mutate(Type = case_when(Type == "Confirmed Positive" ~ "Case", TRUE ~ "Vaccine"))
covid.total.long <- covid.total %>%
pivot_longer(!report_date, names_to = "Type", values_to = "Total") %>%
mutate(Type = case_when(Type == "Total Cases" ~ "Case", TRUE ~ "Vaccine"))
